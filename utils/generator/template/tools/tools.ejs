import { Tool } from "@modelcontextprotocol/sdk/types.js";
<%
// Initialize array to store operation IDs
let operationIds = [];
Object.entries(data).forEach(([operationId, toolData]) => {
  // Store each operationId in the array
  operationIds.push(operationId);
%>
export const <%= operationId %>Tool: Tool = {
  name: "<%= toolData.name %>",
  scope: "<%= scope %>",
  description: "<%- toolData.description.replace(/\n/g, '').replace(/"/g, '\\"') %>",
  inputSchema: {
    type: "object",
    properties: {
<% if (toolData.parameters) { -%>
<% Object.entries(toolData.parameters).forEach(([paramType, params]) => { -%>
      <%= paramType %>: {
        type: "object",
        description: "<%= paramType %> parameters",
        properties: {
<% if (params && Object.keys(params).length > 0) { -%>
<% Object.entries(params).forEach(([paramName, paramDetails], index) => { -%>
          <%= paramName %>: {
            type: "<%= paramDetails.type || 'string' %>",
            description: "<%- paramDetails.description ? paramDetails.description.replace(/\n/g, '').replace(/"/g, '\\"') : '' %>"
          }<%= index < Object.keys(params).length - 1 ? ',' : '' %>
<% }); -%>
<% } -%>
        }
      }<%= Object.keys(toolData.parameters).indexOf(paramType) < Object.keys(toolData.parameters).length - 1 ? ',' : '' %>
<% }); -%>
<% } -%>
    },
    required: ["<%- toolData.required.map(r => r.replace(/^"|"$/g, '')).join(', ') %>"],
  },
};
<% }); -%>

export const <%- scope %>Tools = [
<%- operationIds.map(id => `  ${id}Tool`).join(',\n') %>
];